<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kProSportsDaysToReachBodyShape value="5">
      <!--Range: Sim Days.  Description:  Days to reach desired fitness shape from the other end of the fit/fat spectrum.-->
    </kProSportsDaysToReachBodyShape>
    <kDaysToPlayGame value="Sunday, Wednesday">
      <!--Range:  Days of the week.  Description:  Days of the week on which a Sim will play a sports game.-->
    </kDaysToPlayGame>
    <kGameStartTime value="15">
      <!--Range:  Sim time.  Description:  Time of day when a sports game allows entry (game begins later).  (0.0f - 24.0f) scale.-->
    </kGameStartTime>
    <kGameLength value="3">
      <!--Range:  Sim hours.  Description:  Number of hours that a game lasts for.-->
    </kGameLength>
    <kGameWinPerformance value="10">
      <!--Range:  Career performance.  Description:  Amount of performance to add for a Sim winning a game.-->
    </kGameWinPerformance>
    <kGameLossPerformance value="-5">
      <!--Range:  Career performance.  Description:  Amount of performance to lose for a Sim losing a game.-->
    </kGameLossPerformance>
    <kGameBaseWinChance value="0.4">
      <!--Range:  Float below 1.0f.  Description:  Base win percentage chance of the Sim to win a game.-->
    </kGameBaseWinChance>
    <kGameMoodWinChance value="0.25">
      <!--Range:  Float below 1.0f.  Description:  Mood effect on the percentage chance of the Sim to win.  Tuning 0.1f means that -100 mood will be a 10% reduction in chance to win.-->
    </kGameMoodWinChance>
    <kGamePreparationWinChance value="0.35">
      <!--Range:  Float below 1.0f.  Description:  Preparation effect on the percentage chance of the Sim to win.  This can only help the Sim, never hurt.  Tuning 0.1f here means that the Sim gets an extra 10% chance to win if fully prepared for the game (linearly scaled).-->
    </kGamePreparationWinChance>
    <kWinLossRecordForBoo value="0.25">
      <!--Range:  Float below 1.0f.  Description:  Minimum record for other Sims to boo at your Sim as a reaction.  Having a value below this amount means you will get booed.-->
    </kWinLossRecordForBoo>
    <kBooReactionBroadcastParams>
      <PulseRadius value="10">
        <!--The effect range of the broadcaster in meters.-->
      </PulseRadius>
      <AffectBroadcasterRoomOnly value="True">
        <!--Specifies whether or not the broadcaster effects object through walls that define an enclosed room boundary.-->
      </AffectBroadcasterRoomOnly>
      <PulseRepeatTime value="20">
        <!--A repeat time in sim minutes with which a Sim is pulsed with the OnEnter effects of the broadcaster as long as they reside within the broadcaster's range.  A value of -1 means the pulse never repeats.-->
      </PulseRepeatTime>
      <TimeToFullPulseExpansion value="0">
        <!--The time in sim minutes over which the broadcaster range expands from 0 meters to the PulseRadius (the broadcaster range is instantaneously set to PulseRadius if zero minutes is specified).-->
      </TimeToFullPulseExpansion>
      <TimeDuration value="-1">
        <!--DO NOT TUNE a value of -1 unless you speak with the GPE first.  A value of -1 means that the broadcaster pulses until manually deleted by the scripter.  Otherwise it is the lifetime in sim minutes after which the broadcaster is deleted.-->
      </TimeDuration>
      <InteractionProhibitsOverlay value="False">
        <!--Setting InteractionProhibitsOverlay to true means that if the Sim chooses to use the interaction then the overlay is omitted.  I.e., either the interaction or the overlay is played but not both.-->
      </InteractionProhibitsOverlay>
      <AutonomyLevelToReact value="One">
        <!--The AutonomyLevel at which this reaction fires-->
      </AutonomyLevelToReact>
      <MaxSimsToProcessPerTick value="10">
        <!--The max number of sims that PulseSims will consider in one tick (the more we do, the less efficient (but more responsive) the reaction will be)-->
      </MaxSimsToProcessPerTick>
      <ReactorLineOfSight value="False">
        <!--Specifies whether or not the broadcaster only effects Sims with line-of-sight to the broadcasting object.-->
      </ReactorLineOfSight>
      <ReactOnRepeatedEntry value="True">
        <!--Whether or not the Sim will react anew to the broadcaster when exiting and re-entering the radius of the broadcaster. Do NOT tune to false if you have an ExitCallback or ExitInteraction.-->
      </ReactOnRepeatedEntry>
      <ReactToMultiplePulses value="True">
        <!--If true, your sim will be pulsed every time the broadcaster pulses.  Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </ReactToMultiplePulses>
      <SpeciesToEffect value="Human">
        <!--List of species flags that this reaction broadcaster should broadcast to.  Valid entries are Human, Horse, Cat, Dog, LittleDog or a comma separated list of several of these.-->
      </SpeciesToEffect>
      <ReactorCouldSeeCheck value="False">
        <!--Specifies whether or not the broadcaster only effects Sims which pass a "could-see" check to the broadcasting object (i.e., they are not in their frontal vision cone but there are no objects between the two actors so the reactor could hypothetically see if they turned around).-->
      </ReactorCouldSeeCheck>
      <MountedSimsDoNonMountedBehavior value="False">
        <!--If true, mounted sims will attempt to do the normal non-mounted behavior for this broadcaster while mounted. If true, this will cause the sim to ignore all other mounted reaction specific params. Note: This may or may not work! Test thoroughly when setting this to true.-->
      </MountedSimsDoNonMountedBehavior>
      <MountedReactToMultiplePulses value="False">
        <!--If true, your mounted sim will play the OnEnter MountedReactionType specified in MountedReactionTypes on every pulse. Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </MountedReactToMultiplePulses>
      <MountedReactionTypes value="None, None">
        <!--The MountedReactionType played by mounted horses and riders, instead of doing the normal behavior. If both enter and exit are set to none, mounted sims will not play a mounted reaction. What reaction to play when: [Entering the broadcaster (or initial pulse), exiting the broadcaster].-->
      </MountedReactionTypes>
    </kBooReactionBroadcastParams>
    <kGameMissingWinChance value="0.05">
      <!--Range: Float values below 1.0f.  Description:  Win percentage chance if the Sim does not attend the game.-->
    </kGameMissingWinChance>
    <kGameWinHoursOfPay value="10">
      <!--Range:  Number of hours.  Description:  Number of hours of pay a Sim gets for winning a game.-->
    </kGameWinHoursOfPay>
    <kGameLossHoursOfPay value="1">
      <!--Range:  Number of hours.  Description:  Number of hours of pay a Sim gets for losing a game.-->
    </kGameLossHoursOfPay>
    <kGameScoreUpdateMinutes value="5">
      <!--Range:  Sim minutes.  Description:  Number of minutes to update the score in a game.-->
    </kGameScoreUpdateMinutes>
    <kGameScoreNoUpdateChance value="0.5">
      <!--Range:  Probability value.  Description:  Percent chance that no points are assigned during a game score update.-->
    </kGameScoreNoUpdateChance>
    <kGameKickoffMinutes value="30">
      <!--Range:  Sim minutes.  Description:  Number of minutes after a game start time at which the game actually kicks off and score begins simulating.-->
    </kGameKickoffMinutes>
    <kWorshipInteractionLevel value="8">
      <!--Range:  Career level.  Description:  Career level at which the Sim can be worshipped by other Sims.-->
    </kWorshipInteractionLevel>
    <kHoldAutographSessionLevel value="10">
      <!--Range:  Career level.  Description:  Career level at which the Sim can hold an autograph session.-->
    </kHoldAutographSessionLevel>
  </Current_Tuning>
</base>