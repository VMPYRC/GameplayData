<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kWishingTime value="2">
      <!--Minimum sim minutes to spend making the wish.  Default: 10-->
    </kWishingTime>
    <kNothingSpecialOddsBase value="40">
      <!--Odds that the wish fails-->
    </kNothingSpecialOddsBase>
    <kNothingSpecialOddsTraitsBonus value="20">
      <!--Additional failure odds when they match the bad traits-->
    </kNothingSpecialOddsTraitsBonus>
    <kWealthRain value="50">
      <!--Weight of chances to rain wealth-->
    </kWealthRain>
    <kWealthCar value="15">
      <!--Weight of chances to find new car-->
    </kWealthCar>
    <kWealthGem value="20">
      <!--Weight of chances to find a gem-->
    </kWealthGem>
    <kWealthLuckyCoin value="15">
      <!--Weight of chances to find a lucky coin-->
    </kWealthLuckyCoin>
    <kWealthThrowBack value="20">
      <!--Weight of chances pixie throws back at you-->
    </kWealthThrowBack>
    <kWealthRainMin value="50">
      <!--Minimum wealth to rain down-->
    </kWealthRainMin>
    <kWealthRainMax value="500">
      <!--Maximum wealth to rain down-->
    </kWealthRainMax>
    <kWealthCarTypes value="CarSedan, CarHatchback, CarPickup2door, CarSports, CarExpensive1, CarExpensive2, CarUsed2, CarUsed1">
      <!--Instance names of vehicles that can be given-->
    </kWealthCarTypes>
    <kHappinessEuphoric value="50">
      <!--Odds of getting Euphoric instead of Happy in Moment-->
    </kHappinessEuphoric>
    <kHappinessEuphoricEffect value="50">
      <!--Boost to motives when euphoric-->
    </kHappinessEuphoricEffect>
    <kHappinessInMomentEffect value="15">
      <!--Boost to motives when happy in moment-->
    </kHappinessInMomentEffect>
    <kStealLuckyCoin value="25">
      <!--Chance of successfully getting a lucky coin when stealing coins-->
    </kStealLuckyCoin>
    <kStealWetHygiene value="-40">
      <!--Change to hygiene when failing to get lucky coin-->
    </kStealWetHygiene>
    <kPowerChanceBiggestFan value="60">
      <!--Chance of 'my own biggest fan' when wishing for power-->
    </kPowerChanceBiggestFan>
    <kBiggestFanRepeatTime value="65">
      <!--Biggest Fan: Time for the effect to repeat. SimMinues.  Intial GPE default 20-->
    </kBiggestFanRepeatTime>
    <kChildIsPet value="40">
      <!--Chance that the child will be a pet if EP5 is installed-->
    </kChildIsPet>
    <kLoveFrogTurnsToSim value="65">
      <!--Chance that kissing a frog turns it to a sim-->
    </kLoveFrogTurnsToSim>
    <kFindJobNumJobsOpportunitiesPerDay value="5" />
    <kFindJobNumMinutesBetweenOffer value="3" />
    <kNightEffectsStart value="19">
      <!--Time to start the nightime effect of bugs or fairies-->
    </kNightEffectsStart>
    <kNightEffectsStop value="3">
      <!--Time to stop the nighttime effects of bugs or fairies-->
    </kNightEffectsStop>
    <kNightEffectFireflies value="60">
      <!--Percent chance of having fireflies, if there are no pixies-->
    </kNightEffectFireflies>
    <kNightEffectPixies value="30">
      <!--Percent chance of having pixies-->
    </kNightEffectPixies>
    <kChildIsEvil value="60">
      <!--Chance that child will be evil-->
    </kChildIsEvil>
    <kStealCoinsCooldownMinutes value="360">
      <!--Time in minutes after throwing in a coin that steal coins interaction is available-->
    </kStealCoinsCooldownMinutes>
    <kMorningEffectsStart value="3">
      <!--Time to start the morning effect of fog-->
    </kMorningEffectsStart>
    <kMorningEffectsStop value="8">
      <!--Time to stop the morning effect of fog-->
    </kMorningEffectsStop>
    <kChildOddsFiveInHousehold value="30">
      <!--Child odds when there are 5 people in the household-->
    </kChildOddsFiveInHousehold>
    <kChildOddsSixInHousehold value="15">
      <!--Child odds when there are 6 people in the household-->
    </kChildOddsSixInHousehold>
    <kNightFXBroadcastParams>
      <PulseRadius value="3">
        <!--The effect range of the broadcaster in meters.-->
      </PulseRadius>
      <AffectBroadcasterRoomOnly value="True">
        <!--Specifies whether or not the broadcaster effects object through walls that define an enclosed room boundary.-->
      </AffectBroadcasterRoomOnly>
      <ReactorLineOfSight value="False">
        <!--Specifies whether or not the broadcaster only effects Sims with line-of-sight to the broadcasting object.-->
      </ReactorLineOfSight>
      <ReactorCouldSeeCheck value="False">
        <!--Specifies whether or not the broadcaster only effects Sims which pass a "could-see" check to the broadcasting object (i.e., they are not in their frontal vision cone but there are no objects between the two actors so the reactor could hypothetically see if they turned around).-->
      </ReactorCouldSeeCheck>
      <PulseRepeatTime value="20">
        <!--A repeat time in sim minutes with which a Sim is pulsed with the OnEnter effects of the broadcaster as long as they reside within the broadcaster's range.  A value of -1 means the pulse never repeats.-->
      </PulseRepeatTime>
      <TimeToFullPulseExpansion value="0">
        <!--The time in sim minutes over which the broadcaster range expands from 0 meters to the PulseRadius (the broadcaster range is instantaneously set to PulseRadius if zero minutes is specified).-->
      </TimeToFullPulseExpansion>
      <TimeDuration value="-1">
        <!--DO NOT TUNE a value of -1 unless you speak with the GPE first.  A value of -1 means that the broadcaster pulses until manually deleted by the scripter.  Otherwise it is the lifetime in sim minutes after which the broadcaster is deleted.-->
      </TimeDuration>
      <InteractionProhibitsOverlay value="False">
        <!--Setting InteractionProhibitsOverlay to true means that if the Sim chooses to use the interaction then the overlay is omitted.  I.e., either the interaction or the overlay is played but not both.-->
      </InteractionProhibitsOverlay>
      <AutonomyLevelToReact value="One">
        <!--The AutonomyLevel at which this reaction fires-->
      </AutonomyLevelToReact>
      <MaxSimsToProcessPerTick value="10">
        <!--The max number of sims that PulseSims will consider in one tick (the more we do, the less efficient (but more responsive) the reaction will be)-->
      </MaxSimsToProcessPerTick>
      <ReactOnRepeatedEntry value="True">
        <!--Whether or not the Sim will react anew to the broadcaster when exiting and re-entering the radius of the broadcaster. Do NOT tune to false if you have an ExitCallback or ExitInteraction.-->
      </ReactOnRepeatedEntry>
      <ReactToMultiplePulses value="True">
        <!--If true, your sim will be pulsed every time the broadcaster pulses.  Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </ReactToMultiplePulses>
      <SpeciesToEffect value="Human">
        <!--List of species flags that this reaction broadcaster should broadcast to.  Valid entries are Human, Horse, Cat, Dog, LittleDog or a comma separated list of several of these.-->
      </SpeciesToEffect>
      <MountedSimsDoNonMountedBehavior value="False">
        <!--If true, mounted sims will attempt to do the normal non-mounted behavior for this broadcaster while mounted. If true, this will cause the sim to ignore all other mounted reaction specific params. Note: This may or may not work! Test thoroughly when setting this to true.-->
      </MountedSimsDoNonMountedBehavior>
      <MountedReactToMultiplePulses value="False">
        <!--If true, your mounted sim will play the OnEnter MountedReactionType specified in MountedReactionTypes on every pulse. Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </MountedReactToMultiplePulses>
      <MountedReactionTypes value="None, None">
        <!--The MountedReactionType played by mounted horses and riders, instead of doing the normal behavior. If both enter and exit are set to none, mounted sims will not play a mounted reaction. What reaction to play when: [Entering the broadcaster (or initial pulse), exiting the broadcaster].-->
      </MountedReactionTypes>
    </kNightFXBroadcastParams>
    <kNightFXChanceToReact value="80">
      <!--Range:  0 to 100  Description:  Chance to react when nighttime vfx is turned on.-->
    </kNightFXChanceToReact>
    <kNightFXFunMotiveBonus value="35">
      <!--Range:  -100 - 100  Description:  Fun bonus for seeing nighttime vfx.-->
    </kNightFXFunMotiveBonus>
    <kPhoneCallTimeout value="20">
      <!--Timeout of promotion phone calls in minutes-->
    </kPhoneCallTimeout>
    <kMaximumNumberOfSimsInLine value="3">
      <!--Number of sims able to wait in line-->
    </kMaximumNumberOfSimsInLine>
    <kTimeToWaitInLine value="15">
      <!--Range: Positive floats.  Description: Amount of Sim minutes a Sim will wait in line before timing out and exiting.-->
    </kTimeToWaitInLine>
  </Current_Tuning>
</base>