<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kServiceTuning>
      <kMaxNumNPCsInPool value="1">
        <!--Max num NPCs at once in service-->
      </kMaxNumNPCsInPool>
      <kCost value="1200">
        <!--Cost of service-->
      </kCost>
      <kIsEmergencyService value="False">
        <!--If true this service charges kCost only if falsely called, otherwise free.-->
      </kIsEmergencyService>
      <kIsRecurrent value="False">
        <!--Whether the service is recurrent (true) or one-off (false).  Recurrent services are the only type which can be cancelled through the phone dialog.-->
      </kIsRecurrent>
      <kAlwaysTryToSendSameSim value="True">
        <!--Whether or not the service always tries to send the same NPC to a specific household-->
      </kAlwaysTryToSendSameSim>
    </kServiceTuning>
    <kMinHungerBeforeStartCooking value="-20">
      <!--If any of the CTYAE Sims get below this hunger value, Butler starts cooking-->
    </kMinHungerBeforeStartCooking>
    <kTimeWaitBeforePutawayLeftovers value="90">
      <!--How old leftovers can be out in minutes before the butler will put it away-->
    </kTimeWaitBeforePutawayLeftovers>
    <kTimeBetweenSuccessfulCookingSessions value="140">
      <!--How often the butler will cook in minutes. This prevents the butler from Autonomously cooking continuously. Only used when successfully cooked-->
    </kTimeBetweenSuccessfulCookingSessions>
    <kTimeBeforeRestartCooking value="80">
      <!--When you interrupt a butler while he's cooking, he'll try to continue cooking. But, if he hasn't cooked anything after this time, he'll restart the meal from scratch.-->
    </kTimeBeforeRestartCooking>
    <kUseObjectInSameRoomAsSleeperMultiplier value="0.0001">
      <!--Multiplier for interactions in a room where a sim is sleeping-->
    </kUseObjectInSameRoomAsSleeperMultiplier>
    <kRelationshipLevelForQuit value="-45">
      <!--If Butler's relationship with any YAE falls below this level, he will quit-->
    </kRelationshipLevelForQuit>
    <kTimeCanStartCookBeforeSimWakes value="1.8">
      <!--Butler can start cooking this many hours before the target sim wakes up. This allows the butler to have food ready when the sleeping sim wakes up-->
    </kTimeCanStartCookBeforeSimWakes>
    <kChanceGetGoodAdviceMoodlet value="75">
      <!--Chance you get the good advice moodlet when asking for advice from the butler-->
    </kChanceGetGoodAdviceMoodlet>
    <kDelayBeforeArriving value="0.75">
      <!--Length of time (in hours) that the butler waits before routing to lot-->
    </kDelayBeforeArriving>
  </Current_Tuning>
</base>