<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kUpgradeGlowTuning>
      <UpgradeTime value="15">
        <!--The amount of time it takes to do the upgrade in minutes-->
      </UpgradeTime>
      <SkillGainRate value="5">
        <!--Skill points gained when for one upgrade.  We figure out your progress from 0-1 and multiply by this to give you skill points.-->
      </SkillGainRate>
      <BadFailureChance value="20">
        <!--Range: 0 to 100 float, The chance IF a regular failure occurs, that it is a bad failure-->
      </BadFailureChance>
      <ShouldShockInPuddle value="False">
        <!--Set to True if the object should shock the Sim if sim is standing in a puddle during upgrade.  False otherwise-->
      </ShouldShockInPuddle>
    </kUpgradeGlowTuning>
    <kTraitsLessLikelyToUseUmbrella value="AbsentMinded, Daredevil, Insane">
      <!--Range: list of traits that have a chance of not using the object-->
    </kTraitsLessLikelyToUseUmbrella>
    <kChanceSpecialTraitsNotUseUmbrella value="80">
      <!--Range: 1-100. Chance that someone with a special trait (listed in tuning above) will NOT use an umbrella.-->
    </kChanceSpecialTraitsNotUseUmbrella>
    <kTemperatureThresholdToUseUmbrella value="80">
      <!--Range: positive floats. If temperature is above this number, sim will want to use umbrella.-->
    </kTemperatureThresholdToUseUmbrella>
    <kChanceFemaleUseUmbrellaEvenIfTempNotHigh value="10">
      <!--Range: 1-100. If it's not raining, and temp isn't too high, females still have this chance to use an umbrella.-->
    </kChanceFemaleUseUmbrellaEvenIfTempNotHigh>
    <kTemperatureCapWhenUsingUmbrella value="50">
      <!--Range: positive floats. Holding an umbrella outside makes sim temperature not rise above this cap.-->
    </kTemperatureCapWhenUsingUmbrella>
    <kRepairableTuning>
      <HoursUnbreakable value="72">
        <!--How long until the object is allowed to check for breakage after being fixed or purchased.-->
      </HoursUnbreakable>
      <StartPercentChanceBreak value="1">
        <!--Starting chance of object breaking when its used.-->
      </StartPercentChanceBreak>
      <PercentChanceBreakIncrease value="1">
        <!--How much the chance of breakage increases each time the object is used (int, 1 to 100).-->
      </PercentChanceBreakIncrease>
      <PercentWhenReplaceAvailable value="50">
        <!--What percent breakage chance the Replace interaction becomes available-->
      </PercentWhenReplaceAvailable>
      <RepairComplexity value="1">
        <!--The level at which repair time reaches its minimum-->
      </RepairComplexity>
      <MinRepairTime value="10">
        <!--Minimum amount of time in sim minutes that it takes to repair this object.  This time when skill level at or above RepairComplexity-->
      </MinRepairTime>
      <MaxRepairTime value="20">
        <!--Maximum amount of time in sim minutes that it takes to repair this object.  Occurs at skill level 0.-->
      </MaxRepairTime>
      <RepairSkillGain value="5">
        <!--Rate of skill gain while repairing object in points per sim minute-->
      </RepairSkillGain>
      <UpgradeUnbreakable>
        <UpgradeTime value="15">
          <!--The amount of time it takes to do the upgrade in minutes-->
        </UpgradeTime>
        <SkillGainRate value="5">
          <!--Skill points gained when for one upgrade.  We figure out your progress from 0-1 and multiply by this to give you skill points.-->
        </SkillGainRate>
        <BadFailureChance value="20">
          <!--Range: 0 to 100 float, The chance IF a regular failure occurs, that it is a bad failure-->
        </BadFailureChance>
        <ShouldShockInPuddle value="False">
          <!--Set to True if the object should shock the Sim if sim is standing in a puddle during upgrade.  False otherwise-->
        </ShouldShockInPuddle>
      </UpgradeUnbreakable>
      <MinChanceOfElectrocution value="0">
        <!--Minimum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs when skill level > = RepairComplexity-->
      </MinChanceOfElectrocution>
      <MaxChanceOfElectrocution value="0">
        <!--Maximum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs at skill level 0.-->
      </MaxChanceOfElectrocution>
    </kRepairableTuning>
    <kChanceNpcInventorySeedWithUmbrella value="80">
      <!--Range: positive floats 0-100. On Npc created, if ep8 installed, this is the chance the Npc will be given an umbrella.-->
    </kChanceNpcInventorySeedWithUmbrella>
    <kAvoidanceIncreaseScaleWithUmbrella value="2.5">
      <!--Range: positive floats > 1. When holding an umbrella, a sim's normal avoidance field size is multiplied by this factor.-->
    </kAvoidanceIncreaseScaleWithUmbrella>
    <kChanceGetParasolInsteadOfUmbrella value="20">
      <!--Range: positive floats 1-00. If we decide to give an NPC an umbrella from kChanceNpcInventorySeedWithUmbrella, this is the chance they'll get the parasol instead.-->
    </kChanceGetParasolInsteadOfUmbrella>
    <kUmbrellaCheckForRainEffectFrequency value="5">
      <!--Range: positive floats > 1. Every this many sim minutes, an umbrella being held will check for rain and start/stop effects if necessary.-->
    </kUmbrellaCheckForRainEffectFrequency>
  </Current_Tuning>
</base>