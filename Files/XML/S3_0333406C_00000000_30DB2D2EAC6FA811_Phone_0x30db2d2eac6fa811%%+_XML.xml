<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kChanceAtMinForInviteOver value="20">
      <!--Probability of invite over succeeding at min LTR-->
    </kChanceAtMinForInviteOver>
    <kLTRThresholdForInviteOverMin value="-20">
      <!--LTR value at which invite over is possible-->
    </kLTRThresholdForInviteOverMin>
    <kLTRThresholdForInviteOverMax value="40">
      <!--LTR value at which invite will always succeed-->
    </kLTRThresholdForInviteOverMax>
    <kChanceAtMinForInviteToLot value="25">
      <!--Probability of invite to lot succeeding at min LTR-->
    </kChanceAtMinForInviteToLot>
    <kLTRThresholdForInviteToLotMin value="-20">
      <!--LTR value at which invite to lot is possible-->
    </kLTRThresholdForInviteToLotMin>
    <kLTRThresholdForInviteToLotMax value="30">
      <!--LTR value at which invite to lot will always succeed-->
    </kLTRThresholdForInviteToLotMax>
    <kChanceAtMinForChat value="50">
      <!--Probability of chat succeeding at min LTR-->
    </kChanceAtMinForChat>
    <kLTRThresholdForChatMin value="-50">
      <!--LTR value at which chat is possible-->
    </kLTRThresholdForChatMin>
    <kLTRThresholdForChatMax value="0">
      <!--LTR value at which chat will always succeed-->
    </kLTRThresholdForChatMax>
    <kLTRHitForFailedChat value="0">
      <!--Long term relationship hit failing to chat-->
    </kLTRHitForFailedChat>
    <kMinChatTimeMinutes value="30">
      <!--Minimum chat talk time in minutes-->
    </kMinChatTimeMinutes>
    <kMaxChatTimeMinutes value="60">
      <!--Maximum chat talk time in minutes-->
    </kMaxChatTimeMinutes>
    <kChatWanderDistanceMin value="2">
      <!--Minimum chat wander distance-->
    </kChatWanderDistanceMin>
    <kChatWanderDistanceMax value="5">
      <!--Maximum chat wander distance-->
    </kChatWanderDistanceMax>
    <kLTRHitForFailedInviteOver value="0">
      <!--Long term relationship hit failing to invite over-->
    </kLTRHitForFailedInviteOver>
    <kLTRHitForFailedInviteToLot value="0">
      <!--Long term relationship hit failing to invite to lot-->
    </kLTRHitForFailedInviteToLot>
    <kLTRHitMultiplierForBadFailure value="2">
      <!--Long term relationship hit multiplier for bad failure-->
    </kLTRHitMultiplierForBadFailure>
    <kHoursBeforeWorkSimIsBusy value="1">
      <!--Hours Sim before work Sim will not take calls-->
    </kHoursBeforeWorkSimIsBusy>
    <kLTRHitForCallingTooEarlyOrLate value="5">
      <!--Long term relationship hit for calling too early or late-->
    </kLTRHitForCallingTooEarlyOrLate>
    <kLTRHitForCallingAtWork value="0">
      <!--Long term relationship hit for calling when Sim is at work-->
    </kLTRHitForCallingAtWork>
    <kMinimumCallInterval value="6">
      <!--Minimum interval between random calls in hours-->
    </kMinimumCallInterval>
    <kChanceForNoCall value="45">
      <!--Weighted likelihood for no call to happen per interval-->
    </kChanceForNoCall>
    <kChanceForRandomChat value="42">
      <!--Weighted likelihood for a random chat call in percent per interval-->
    </kChanceForRandomChat>
    <kChanceForRandomInviteOver value="8">
      <!--Weighted likelihood for a random invite over call in percent per interval-->
    </kChanceForRandomInviteOver>
    <kMinimumCallWindow value="8">
      <!--Minimum window of time to schedule a call interval-->
    </kMinimumCallWindow>
    <kRandomCallTimeout value="25">
      <!--Timeout of random calls in minutes-->
    </kRandomCallTimeout>
    <kExcitableSimChanceForExcitedAfterChat value="0.2">
      <!--Range: Positive floats below 1.0f.  Description:  Percentage chance an Excitable Sim will get the Excited buff after a 'Chat' on the phone.-->
    </kExcitableSimChanceForExcitedAfterChat>
    <kAnswerBroadcasterParams>
      <PulseRadius value="10">
        <!--The effect range of the broadcaster in meters.-->
      </PulseRadius>
      <AffectBroadcasterRoomOnly value="False">
        <!--Specifies whether or not the broadcaster effects object through walls that define an enclosed room boundary.-->
      </AffectBroadcasterRoomOnly>
      <TimeToFullPulseExpansion value="1.0">
        <!--The time in sim minutes over which the broadcaster range expands from 0 meters to the PulseRadius (the broadcaster range is instantaneously set to PulseRadius if zero minutes is specified).-->
      </TimeToFullPulseExpansion>
      <TimeDuration value="-1">
        <!--DO NOT TUNE a value of -1 unless you speak with the GPE first.  A value of -1 means that the broadcaster pulses until manually deleted by the scripter.  Otherwise it is the lifetime in sim minutes after which the broadcaster is deleted.-->
      </TimeDuration>
      <PulseRepeatTime value="5">
        <!--A repeat time in sim minutes with which a Sim is pulsed with the OnEnter effects of the broadcaster as long as they reside within the broadcaster's range.  A value of -1 means the pulse never repeats.-->
      </PulseRepeatTime>
      <InteractionProhibitsOverlay value="False">
        <!--Setting InteractionProhibitsOverlay to true means that if the Sim chooses to use the interaction then the overlay is omitted.  I.e., either the interaction or the overlay is played but not both.-->
      </InteractionProhibitsOverlay>
      <AutonomyLevelToReact value="Three">
        <!--The AutonomyLevel at which this reaction fires-->
      </AutonomyLevelToReact>
      <MaxSimsToProcessPerTick value="10">
        <!--The max number of sims that PulseSims will consider in one tick (the more we do, the less efficient (but more responsive) the reaction will be)-->
      </MaxSimsToProcessPerTick>
      <ReactorLineOfSight value="False">
        <!--Specifies whether or not the broadcaster only effects Sims with line-of-sight to the broadcasting object.-->
      </ReactorLineOfSight>
      <ReactOnRepeatedEntry value="True">
        <!--Whether or not the Sim will react anew to the broadcaster when exiting and re-entering the radius of the broadcaster. Do NOT tune to false if you have an ExitCallback or ExitInteraction.-->
      </ReactOnRepeatedEntry>
      <ReactToMultiplePulses value="True">
        <!--If true, your sim will be pulsed every time the broadcaster pulses.  Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </ReactToMultiplePulses>
      <SpeciesToEffect value="Human">
        <!--List of species flags that this reaction broadcaster should broadcast to.  Valid entries are Human, Horse, Cat, Dog, LittleDog or a comma separated list of several of these.-->
      </SpeciesToEffect>
      <ReactorCouldSeeCheck value="False">
        <!--Specifies whether or not the broadcaster only effects Sims which pass a "could-see" check to the broadcasting object (i.e., they are not in their frontal vision cone but there are no objects between the two actors so the reactor could hypothetically see if they turned around).-->
      </ReactorCouldSeeCheck>
      <MountedSimsDoNonMountedBehavior value="False">
        <!--If true, mounted sims will attempt to do the normal non-mounted behavior for this broadcaster while mounted. If true, this will cause the sim to ignore all other mounted reaction specific params. Note: This may or may not work! Test thoroughly when setting this to true.-->
      </MountedSimsDoNonMountedBehavior>
      <MountedReactToMultiplePulses value="False">
        <!--If true, your mounted sim will play the OnEnter MountedReactionType specified in MountedReactionTypes on every pulse. Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </MountedReactToMultiplePulses>
      <MountedReactionTypes value="None, None">
        <!--The MountedReactionType played by mounted horses and riders, instead of doing the normal behavior. If both enter and exit are set to none, mounted sims will not play a mounted reaction. What reaction to play when: [Entering the broadcaster (or initial pulse), exiting the broadcaster].-->
      </MountedReactionTypes>
    </kAnswerBroadcasterParams>
    <kChanceOneHanded value="0.5">
      <!--Range: Positive floats below 1.0f.  Description:  Percentage chance a sim will dial the phone one-handed. (Sims carrying toddlers always use the one-handed dial.)-->
    </kChanceOneHanded>
    <kChanceMirrored value="0.5">
      <!--Range: Positive floats below 1.0f.  Description:  Percentage chance a sim will use the mirrored version of the phone interaction. (Sims carrying toddlers always use the mirrored version.)-->
    </kChanceMirrored>
    <kMinuesToDisableWorkaholicInteraction value="120">
      <!--After these many minutes after the phone call, the sim will lose the special workaholic trait interaction on the computer. Positive float. Initial GPE default: 120f-->
    </kMinuesToDisableWorkaholicInteraction>
    <kLookAtInterestingnessForRingingPhone value="70">
      <!--Interestingness (0-100) of looking at phone when ringing-->
    </kLookAtInterestingnessForRingingPhone>
    <kLookAtInterestingnessForSilentPhone value="1">
      <!--Interestingness (0-100) of looking at phone when silent-->
    </kLookAtInterestingnessForSilentPhone>
    <sLookAtTuning>
      <SlotNameHashToLookAt value="">
        <!--ID of slot to look at (leave string empty for default LookAt slot)-->
      </SlotNameHashToLookAt>
      <LookAtInterestingness value="1">
        <!--Interestingness score (from 0 - 100) for looking at this type of object (this *must* be non-zero if you want the object to be added to the Room's LookAt list). (This can be overridden by the script's GetInterestingness function).-->
      </LookAtInterestingness>
      <DefaultInteractionLookAtThreshold value="-1">
        <!--The default look-at threshold (-1 to ignore or a nonnegative number) for interactions on this object.  If set, a Sim will only look at other objects if that object's look-at score is above this limit.  45 (moving sims) and 145 (sims entering the room) are common values.-->
      </DefaultInteractionLookAtThreshold>
    </sLookAtTuning>
    <kMinChatWanderDelay value="5">
      <!--Minimum time between wandering while chatting in minutes-->
    </kMinChatWanderDelay>
    <kMaxChatWanderDelay value="20">
      <!--Maximum time between wandering while chatting in minutes-->
    </kMaxChatWanderDelay>
    <kMinimumCallDistance value="75">
      <!--Minimum distance a Sim needs to be from a selectable Sim to call him-->
    </kMinimumCallDistance>
    <kChatWanderDistanceToCheck value="0.5">
      <!--Distance sim should check around himself when determining whether or not to wander-->
    </kChatWanderDistanceToCheck>
    <kLTRThresholdForSimToBeCalledChatMin value="25">
      <!--LTR value at which a sim calling an active sim to chat is possible-->
    </kLTRThresholdForSimToBeCalledChatMin>
    <kLTRThresholdForSimToBeInvitedOverMin value="40">
      <!--LTR value at which a sim calling an active sim to invite him over is possible-->
    </kLTRThresholdForSimToBeInvitedOverMin>
    <kFriendlyIncreaseWhenChattingOnPhone value="80">
      <!--Increase to friendly STC after chatting on phone-->
    </kFriendlyIncreaseWhenChattingOnPhone>
    <kChanceMultiplierWhenInNegativeSTC value="0.5">
      <!--Multiplier (0-1) on how likely they will accept the call if the STC is negative-->
    </kChanceMultiplierWhenInNegativeSTC>
    <kLtrGainForChatAcrossWorldsPerHour value="5">
      <!--LTR increase gained from doing chat on phone.-->
    </kLtrGainForChatAcrossWorldsPerHour>
    <kLTRThresholdForInviteOverForeignVisitorMin value="40">
      <!--LTR value at which invite over foreign visitor is possible-->
    </kLTRThresholdForInviteOverForeignVisitorMin>
    <kMaxForeignVisitors value="8">
      <!--Max number of foreign visitors-->
    </kMaxForeignVisitors>
    <kForeignVisitorArrivalTime value="9">
      <!--Time of day at which invited foreign visitors arrive.-->
    </kForeignVisitorArrivalTime>
    <kChanceToSuggestBachelorPartyWhenChatting value="1.0">
      <!--Range:  0 - 1  Description:  If placing a random chat call, the chance that it's going to try to suggest having a bachelor party-->
    </kChanceToSuggestBachelorPartyWhenChatting>
    <kChanceToAskToPromWhenChatting value="0.75">
      <!--Range:  0 - 1  Description:  If placing a random chat call, the chance that it's going to try to invite a Sim to Prom-->
    </kChanceToAskToPromWhenChatting>
    <kChanceForBoardingSchoolCallWhenChatting value="0.8">
      <!--Range:  0 - 1  Description:  If placing a random chat call, the chance that it's going to try to be a boarding school call.-->
    </kChanceForBoardingSchoolCallWhenChatting>
    <kChanceAtMinForInviteHousehold value="25">
      <!--Probability of invite household or invite pets over lot succeeding at min LTR-->
    </kChanceAtMinForInviteHousehold>
    <kLTRThresholdForInviteHouseholdMin value="5">
      <!--LTR value at which invite to lot is possible-->
    </kLTRThresholdForInviteHouseholdMin>
    <kLTRThresholdForInviteHouseholdMax value="40">
      <!--LTR value at which invite to lot will always succeed-->
    </kLTRThresholdForInviteHouseholdMax>
    <kLTRHitForFailedInviteHousehold value="0">
      <!--Long term relationship hit failing to invite household or bring over pets-->
    </kLTRHitForFailedInviteHousehold>
    <kChanceAtMinForBringOverPet value="25">
      <!--Probability of invite pets over lot succeeding at min LTR-->
    </kChanceAtMinForBringOverPet>
    <kLTRThresholdForBringOverPetMin value="5">
      <!--LTR value at which Bring over pets to lot is possible-->
    </kLTRThresholdForBringOverPetMin>
    <kLTRThresholdForBringOverPetMax value="40">
      <!--LTR value at which Bring over pets will always succeed-->
    </kLTRThresholdForBringOverPetMax>
    <kLTRHitForFailedBringOverPet value="0">
      <!--Long term relationship hit failing to bring over pets-->
    </kLTRHitForFailedBringOverPet>
    <kLTRThresholdForInviteOverVisitorToGradMin value="10">
      <!--LTR value at which invite over visitors to your graduation is possible-->
    </kLTRThresholdForInviteOverVisitorToGradMin>
  </Current_Tuning>
  <Deprecated_Tuning>
    <kAnswerBroadcasterPulseMinRadius value="1">
      <!--Min radius of the answer broadcaster-->
      <!--deprecated on: 2/1/2008 5:09:25 PM-->
    </kAnswerBroadcasterPulseMinRadius>
    <kAnswerBroadcasterPulseMaxRadius value="10">
      <!--Max radius of the answer broadcaster-->
      <!--deprecated on: 2/1/2008 5:09:25 PM-->
    </kAnswerBroadcasterPulseMaxRadius>
    <kAnswerBroadcasterPulseTime value="1">
      <!--Answer broadcaster pulse expansion time in minutes-->
      <!--deprecated on: 2/1/2008 5:09:25 PM-->
    </kAnswerBroadcasterPulseTime>
    <kAnswerBroadcasterPulsePeriod value="5">
      <!--Answer broadcaster pulse period time in minutes-->
      <!--deprecated on: 2/1/2008 5:09:25 PM-->
    </kAnswerBroadcasterPulsePeriod>
    <RequiresScoring value="True">
      <!--Whether or not the broadcast interactions are scored by autonomy (TO BE DELETED BY REVANS)-->
      <!--deprecated on: 2/7/2008 3:04:25 PM-->
    </RequiresScoring>
    <kHourItsTooLateToCall value="22">
      <!--Time of day it is too late to call-->
      <!--deprecated on: 3/7/2008 10:27:07 AM-->
    </kHourItsTooLateToCall>
    <kHourItsTooEarlyToCall value="4">
      <!--Time of day it is too early to call-->
      <!--deprecated on: 3/7/2008 10:27:07 AM-->
    </kHourItsTooEarlyToCall>
    <kHourItsOkayToCall value="7">
      <!--Time of day it is okay to call-->
      <!--deprecated on: 3/7/2008 10:27:07 AM-->
    </kHourItsOkayToCall>
    <IsLifeThreatening value="False">
      <!--Whether the reaction is responding to a life-threatening event (e.g. responding to fire)-->
      <!--deprecated on: 3/13/2008 4:22:11 PM-->
    </IsLifeThreatening>
  </Deprecated_Tuning>
</base>