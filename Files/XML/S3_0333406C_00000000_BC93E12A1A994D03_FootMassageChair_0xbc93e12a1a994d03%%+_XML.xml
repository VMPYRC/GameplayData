<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kRepairableTuning>
      <HoursUnbreakable value="120">
        <!--How long until the object is allowed to check for breakage after being fixed or purchased.-->
      </HoursUnbreakable>
      <StartPercentChanceBreak value="3">
        <!--Starting chance of object breaking when its used.-->
      </StartPercentChanceBreak>
      <PercentChanceBreakIncrease value="2">
        <!--How much the chance of breakage increases each time the object is used (int, 1 to 100).-->
      </PercentChanceBreakIncrease>
      <PercentWhenReplaceAvailable value="15">
        <!--What percent breakage chance the Replace interaction becomes available-->
      </PercentWhenReplaceAvailable>
      <RepairComplexity value="7">
        <!--The level at which repair time reaches its minimum-->
      </RepairComplexity>
      <MinRepairTime value="25">
        <!--Minimum amount of time in sim minutes that it takes to repair this object.  This time when skill level at or above RepairComplexity-->
      </MinRepairTime>
      <MaxRepairTime value="120">
        <!--Maximum amount of time in sim minutes that it takes to repair this object.  Occurs at skill level 0.-->
      </MaxRepairTime>
      <RepairSkillGain value="1900">
        <!--Rate of skill gain while repairing object in points per sim minute-->
      </RepairSkillGain>
      <UpgradeUnbreakable>
        <UpgradeTime value="240">
          <!--The amount of time it takes to do the upgrade in minutes-->
        </UpgradeTime>
        <SkillGainRate value="3600">
          <!--Skill points gained when for one upgrade.  We figure out your progress from 0-1 and multiply by this to give you skill points.-->
        </SkillGainRate>
        <BadFailureChance value="50">
          <!--Range: 0 to 100 float, The chance IF a regular failure occurs, that it is a bad failure-->
        </BadFailureChance>
        <ShouldShockInPuddle value="True">
          <!--Set to True if the object should shock the Sim if sim is standing in a puddle during upgrade.  False otherwise-->
        </ShouldShockInPuddle>
      </UpgradeUnbreakable>
      <MinChanceOfElectrocution value="0">
        <!--Minimum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs when skill level > = RepairComplexity-->
      </MinChanceOfElectrocution>
      <MaxChanceOfElectrocution value="10">
        <!--Maximum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs at skill level 0.-->
      </MaxChanceOfElectrocution>
    </kRepairableTuning>
    <kComfyBuffScore value="20">
      <!--Score for comfy buff the sim will get when he sits on the massage chair. Unit and scale should be similar to other sittable objects.-->
    </kComfyBuffScore>
    <kQuickMassageDuration value="30">
      <!--Duration time of the Quick Massage, this is the time sim will loop the animation on the chair-->
    </kQuickMassageDuration>
    <kDeluxeMassageDuration value="120">
      <!--Duration time of the Deluxe Massage, this is the time sim will loop the animation on the chair-->
    </kDeluxeMassageDuration>
    <kChanceOfSleepDeluxeMassage value="0.04">
      <!--Probability of sim falling asleep during the deluxe massage-->
    </kChanceOfSleepDeluxeMassage>
    <kSleepOnMassageDuration value="60">
      <!--Duration sim should sleep on deluxe massage special case-->
    </kSleepOnMassageDuration>
    <kTimeForChanceOfSleep value="30">
      <!--Specific time where the dice roll to fall sleep during deluxe massage should be validated -->
    </kTimeForChanceOfSleep>
    <kSleepMassageCommodityUpdate>
      <mMultiplier value="1" />
      <mLocked value="False" />
      <mActualValue value="20" />
      <mUpdateType value="ContinuousFlow" />
      <mTimeDependsOnCommodityFilling value="False" />
      <mUpdateEvenOnFailure value="True" />
      <mUpdateAboveAndBelowZero value="Either" />
      <CommodityIsMeantForReinforcement value="False" />
    </kSleepMassageCommodityUpdate>
    <kRelaxBuffMoodValue value="20">
      <!--Mood change for Relax buff on Deluxe Massage interaction.  Int, GPE default: 20-->
    </kRelaxBuffMoodValue>
    <kRequiredFairySkillLevelRepair value="3">
      <!--Minimum fairy skill level requirement for the fairy repair interaction-->
    </kRequiredFairySkillLevelRepair>
  </Current_Tuning>
</base>