<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kStereoTuning>
      <MoodScoreForEnjoyMusicBuff value="15">
        <!--Mood score added by 'Enjoying Music' buff. Can be replaced with soup up stereo upgrade mood value or favorite music type value. Positive int.-->
      </MoodScoreForEnjoyMusicBuff>
    </kStereoTuning>
    <kRepairableTuning>
      <HoursUnbreakable value="72">
        <!--How long until the object is allowed to check for breakage after being fixed or purchased.-->
      </HoursUnbreakable>
      <StartPercentChanceBreak value="3">
        <!--Starting chance of object breaking when its used.-->
      </StartPercentChanceBreak>
      <PercentChanceBreakIncrease value="1">
        <!--How much the chance of breakage increases each time the object is used (int, 1 to 100).-->
      </PercentChanceBreakIncrease>
      <PercentWhenReplaceAvailable value="15">
        <!--What percent breakage chance the Replace interaction becomes available-->
      </PercentWhenReplaceAvailable>
      <RepairComplexity value="6">
        <!--The level at which repair time reaches its minimum-->
      </RepairComplexity>
      <MinRepairTime value="20">
        <!--Minimum amount of time in sim minutes that it takes to repair this object.  This time when skill level at or above RepairComplexity-->
      </MinRepairTime>
      <MaxRepairTime value="105">
        <!--Maximum amount of time in sim minutes that it takes to repair this object.  Occurs at skill level 0.-->
      </MaxRepairTime>
      <RepairSkillGain value="1700">
        <!--Rate of skill gain while repairing object in points per sim minute-->
      </RepairSkillGain>
      <UpgradeUnbreakable>
        <UpgradeTime value="240">
          <!--The amount of time it takes to do the upgrade in minutes-->
        </UpgradeTime>
        <SkillGainRate value="3600">
          <!--Skill points gained when for one upgrade.  We figure out your progress from 0-1 and multiply by this to give you skill points.-->
        </SkillGainRate>
        <BadFailureChance value="40">
          <!--Range: 0 to 100 float, The chance IF a regular failure occurs, that it is a bad failure-->
        </BadFailureChance>
        <ShouldShockInPuddle value="False">
          <!--Set to True if the object should shock the Sim if sim is standing in a puddle during upgrade.  False otherwise-->
        </ShouldShockInPuddle>
      </UpgradeUnbreakable>
      <MinChanceOfElectrocution value="0">
        <!--Minimum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs when skill level > = RepairComplexity-->
      </MinChanceOfElectrocution>
      <MaxChanceOfElectrocution value="10">
        <!--Maximum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs at skill level 0.-->
      </MaxChanceOfElectrocution>
    </kRepairableTuning>
    <kUpgradeSoupUpSpeakersTuning>
      <UpgradeTime value="320">
        <!--The amount of time it takes to do the upgrade in minutes-->
      </UpgradeTime>
      <SkillGainRate value="3520">
        <!--Skill points gained when for one upgrade.  We figure out your progress from 0-1 and multiply by this to give you skill points.-->
      </SkillGainRate>
      <BadFailureChance value="20">
        <!--Range: 0 to 100 float, The chance IF a regular failure occurs, that it is a bad failure-->
      </BadFailureChance>
      <ShouldShockInPuddle value="False">
        <!--Set to True if the object should shock the Sim if sim is standing in a puddle during upgrade.  False otherwise-->
      </ShouldShockInPuddle>
    </kUpgradeSoupUpSpeakersTuning>
    <kUpgradeWireHouseWithSpeakersTuning>
      <UpgradeTime value="240">
        <!--The amount of time it takes to do the upgrade in minutes-->
      </UpgradeTime>
      <SkillGainRate value="4560">
        <!--Skill points gained when for one upgrade.  We figure out your progress from 0-1 and multiply by this to give you skill points.-->
      </SkillGainRate>
      <BadFailureChance value="20">
        <!--Range: 0 to 100 float, The chance IF a regular failure occurs, that it is a bad failure-->
      </BadFailureChance>
      <ShouldShockInPuddle value="False">
        <!--Set to True if the object should shock the Sim if sim is standing in a puddle during upgrade.  False otherwise-->
      </ShouldShockInPuddle>
    </kUpgradeWireHouseWithSpeakersTuning>
    <kCommunityStereoTimeOfDayStart value="9">
      <!--Time of day community stereos turn on in 24hr time. Note that if the stereo is in a venue with open/closing hours (e.g. a bar), this tuning is overriden by those hours.-->
    </kCommunityStereoTimeOfDayStart>
    <kCommunityStereoTimeOfDayStop value="24">
      <!--Time of day community stereos turn off in 24hr time. Note that if the stereo is in a venue with open/closing hours (e.g. a bar), this tuning is overriden by those hours.-->
    </kCommunityStereoTimeOfDayStop>
    <kMaxRouteDistanceOverride value="10">
      <!--Max distance route distance override - for dancing, this value is used for routing, instead of base stereo route tuning.-->
    </kMaxRouteDistanceOverride>
    <kDanceMotiveMultiplierDanceClub value="1">
      <!--Dance motive multiplier in venue type Dance Club-->
    </kDanceMotiveMultiplierDanceClub>
    <kDanceMotiveMultiplierCocktailLounge value="0.5">
      <!--Dance motive multiplier in venue type CocktailLounge-->
    </kDanceMotiveMultiplierCocktailLounge>
    <kDanceMotiveMultiplierDiveBar value="0.75">
      <!--Dance motive multiplier in venue type Dive Bar-->
    </kDanceMotiveMultiplierDiveBar>
  </Current_Tuning>
</base>