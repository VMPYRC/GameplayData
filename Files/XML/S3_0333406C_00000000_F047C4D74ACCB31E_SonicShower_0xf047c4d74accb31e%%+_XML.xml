<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kShowerTime value="10">
      <!--Time Spent in Shower for a full clean cycle in sim minutes - Vi-->
    </kShowerTime>
    <kRepairableTuning>
      <HoursUnbreakable value="72">
        <!--How long until the object is allowed to check for breakage after being fixed or purchased.-->
      </HoursUnbreakable>
      <StartPercentChanceBreak value="4">
        <!--Starting chance of object breaking when its used.-->
      </StartPercentChanceBreak>
      <PercentChanceBreakIncrease value="1">
        <!--How much the chance of breakage increases each time the object is used (int, 1 to 100).-->
      </PercentChanceBreakIncrease>
      <PercentWhenReplaceAvailable value="15">
        <!--What percent breakage chance the Replace interaction becomes available-->
      </PercentWhenReplaceAvailable>
      <RepairComplexity value="2">
        <!--The level at which repair time reaches its minimum-->
      </RepairComplexity>
      <MinRepairTime value="15">
        <!--Minimum amount of time in sim minutes that it takes to repair this object.  This time when skill level at or above RepairComplexity-->
      </MinRepairTime>
      <MaxRepairTime value="90">
        <!--Maximum amount of time in sim minutes that it takes to repair this object.  Occurs at skill level 0.-->
      </MaxRepairTime>
      <RepairSkillGain value="1400">
        <!--Rate of skill gain while repairing object in points per sim minute-->
      </RepairSkillGain>
      <UpgradeUnbreakable>
        <UpgradeTime value="240">
          <!--The amount of time it takes to do the upgrade in minutes-->
        </UpgradeTime>
        <SkillGainRate value="3600">
          <!--Skill points gained when for one upgrade.  We figure out your progress from 0-1 and multiply by this to give you skill points.-->
        </SkillGainRate>
        <BadFailureChance value="50">
          <!--Range: 0 to 100 float, The chance IF a regular failure occurs, that it is a bad failure-->
        </BadFailureChance>
        <ShouldShockInPuddle value="False">
          <!--Set to True if the object should shock the Sim if sim is standing in a puddle during upgrade.  False otherwise-->
        </ShouldShockInPuddle>
      </UpgradeUnbreakable>
      <MinChanceOfElectrocution value="0">
        <!--Minimum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs when skill level > = RepairComplexity-->
      </MinChanceOfElectrocution>
      <MaxChanceOfElectrocution value="0">
        <!--Maximum percent chance between 0 and 100 that the sim will get electrocuted when doing a repair.  Should only be set > 0 for electrical objects. Occurs at skill level 0.-->
      </MaxChanceOfElectrocution>
    </kRepairableTuning>
    <kPristineProtectChance value="65">
      <!--Chance of Getting Pristine protection buff. Range 0-100.  - Vi-->
    </kPristineProtectChance>
    <kFailChance value="60, 45, 35, 25, 20, 15, 10, 8, 5, 0, 0">
      <!--Range 0-100: Chance of failure of doing base cleanse interaction per future skill level. - Vi-->
    </kFailChance>
    <kAdditiveFailChance value="10">
      <!--Increased chance of failure in addition to kFailChance in the power cleanse interaction. Range 0-100. - Vi-->
    </kAdditiveFailChance>
    <kFavColorBonus value="1000">
      <!--Increased in motive gain if showering with favorite color. Float - Vi-->
    </kFavColorBonus>
    <kConfidentFutureSkillLevel value="5">
      <!--Sims with this level of future skill (or higher) will use the high-skill animations - Vi-->
    </kConfidentFutureSkillLevel>
    <kSonicShowerCapacity value="3">
      <!--Range: Integer > 0. Description: How many sims can fit in the line for the shower.-->
    </kSonicShowerCapacity>
    <kTimeToWaitToEvict value="15">
      <!--Time to wait to evict a lower priority Sim from this object, in Sim minutes-->
    </kTimeToWaitToEvict>
    <kUpgradeDuration value="120">
      <!--Time to perform the program: power cleanse upgrade, in Sim minutes-->
    </kUpgradeDuration>
  </Current_Tuning>
</base>