<?xml version="1.0" encoding="utf-8"?>
<base>
  <Current_Tuning>
    <kDeathReactionBroadcasterParams>
      <PulseRadius value="15">
        <!--The effect range of the broadcaster in meters.-->
      </PulseRadius>
      <AffectBroadcasterRoomOnly value="False">
        <!--Specifies whether or not the broadcaster effects object through walls that define an enclosed room boundary.-->
      </AffectBroadcasterRoomOnly>
      <PulseRepeatTime value="-1">
        <!--A repeat time in sim minutes with which a Sim is pulsed with the OnEnter effects of the broadcaster as long as they reside within the broadcaster's range.  A value of -1 means the pulse never repeats.-->
      </PulseRepeatTime>
      <TimeToFullPulseExpansion value="0">
        <!--The time in sim minutes over which the broadcaster range expands from 0 meters to the PulseRadius (the broadcaster range is instantaneously set to PulseRadius if zero minutes is specified).-->
      </TimeToFullPulseExpansion>
      <TimeDuration value="-1">
        <!--DO NOT TUNE a value of -1 unless you speak with the GPE first.  A value of -1 means that the broadcaster pulses until manually deleted by the scripter.  Otherwise it is the lifetime in sim minutes after which the broadcaster is deleted.-->
      </TimeDuration>
      <InteractionProhibitsOverlay value="False">
        <!--Setting InteractionProhibitsOverlay to true means that if the Sim chooses to use the interaction then the overlay is omitted.  I.e., either the interaction or the overlay is played but not both.-->
      </InteractionProhibitsOverlay>
      <AutonomyLevelToReact value="One">
        <!--The AutonomyLevel at which this reaction fires-->
      </AutonomyLevelToReact>
      <MaxSimsToProcessPerTick value="10">
        <!--The max number of sims that PulseSims will consider in one tick (the more we do, the less efficient (but more responsive) the reaction will be)-->
      </MaxSimsToProcessPerTick>
      <ReactorLineOfSight value="False">
        <!--Specifies whether or not the broadcaster only effects Sims with line-of-sight to the broadcasting object.-->
      </ReactorLineOfSight>
      <ReactOnRepeatedEntry value="False">
        <!--Whether or not the Sim will react anew to the broadcaster when exiting and re-entering the radius of the broadcaster. Do NOT tune to false if you have an ExitCallback or ExitInteraction.-->
      </ReactOnRepeatedEntry>
      <ReactToMultiplePulses value="False">
        <!--If true, your sim will be pulsed every time the broadcaster pulses.  Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </ReactToMultiplePulses>
      <SpeciesToEffect value="Human, Horse, Cat, Dog, LittleDog">
        <!--List of species flags that this reaction broadcaster should broadcast to.  Valid entries are Human, Horse, Cat, Dog, LittleDog or a comma separated list of several of these.-->
      </SpeciesToEffect>
      <ReactorCouldSeeCheck value="False">
        <!--Specifies whether or not the broadcaster only effects Sims which pass a "could-see" check to the broadcasting object (i.e., they are not in their frontal vision cone but there are no objects between the two actors so the reactor could hypothetically see if they turned around).-->
      </ReactorCouldSeeCheck>
      <MountedSimsDoNonMountedBehavior value="True">
        <!--If true, mounted sims will attempt to do the normal non-mounted behavior for this broadcaster while mounted. If true, this will cause the sim to ignore all other mounted reaction specific params. Note: This may or may not work! Test thoroughly when setting this to true.-->
      </MountedSimsDoNonMountedBehavior>
      <MountedReactToMultiplePulses value="False">
        <!--If true, your mounted sim will play the OnEnter MountedReactionType specified in MountedReactionTypes on every pulse. Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </MountedReactToMultiplePulses>
      <MountedReactionTypes value="None, None">
        <!--The MountedReactionType played by mounted horses and riders, instead of doing the normal behavior. If both enter and exit are set to none, mounted sims will not play a mounted reaction. What reaction to play when: [Entering the broadcaster (or initial pulse), exiting the broadcaster].-->
      </MountedReactionTypes>
    </kDeathReactionBroadcasterParams>
    <kNumHoursBeforeSpawn value="24">
      <!--The number of hours before a dead Sim can turn into a ghost and between minimum between ghost spawns.-->
    </kNumHoursBeforeSpawn>
    <kSpawnChance value="25">
      <!--The chance a ghost will spawn at kGhostSpawnHour once its required idle time has passed.-->
    </kSpawnChance>
    <kLifetimeHappinessWealthyTombstone value="150000">
      <!--If the Sim's lifetime happiness at death is >= this they will have a 'wealthy' tombstone.-->
    </kLifetimeHappinessWealthyTombstone>
    <kLifetimeHappinessPoorTombstone value="75000">
      <!--If the Sim's lifetime happiness at death is >= this they will have a 'poor' tombstone.-->
    </kLifetimeHappinessPoorTombstone>
    <kHeartBrokenParams>
      <PulseRadius value="10">
        <!--The effect range of the broadcaster in meters.-->
      </PulseRadius>
      <AffectBroadcasterRoomOnly value="True">
        <!--Specifies whether or not the broadcaster effects object through walls that define an enclosed room boundary.-->
      </AffectBroadcasterRoomOnly>
      <PulseRepeatTime value="30">
        <!--A repeat time in sim minutes with which a Sim is pulsed with the OnEnter effects of the broadcaster as long as they reside within the broadcaster's range.  A value of -1 means the pulse never repeats.-->
      </PulseRepeatTime>
      <TimeToFullPulseExpansion value="0">
        <!--The time in sim minutes over which the broadcaster range expands from 0 meters to the PulseRadius (the broadcaster range is instantaneously set to PulseRadius if zero minutes is specified).-->
      </TimeToFullPulseExpansion>
      <TimeDuration value="-1">
        <!--DO NOT TUNE a value of -1 unless you speak with the GPE first.  A value of -1 means that the broadcaster pulses until manually deleted by the scripter.  Otherwise it is the lifetime in sim minutes after which the broadcaster is deleted.-->
      </TimeDuration>
      <InteractionProhibitsOverlay value="False">
        <!--Setting InteractionProhibitsOverlay to true means that if the Sim chooses to use the interaction then the overlay is omitted.  I.e., either the interaction or the overlay is played but not both.-->
      </InteractionProhibitsOverlay>
      <AutonomyLevelToReact value="One">
        <!--The AutonomyLevel at which this reaction fires-->
      </AutonomyLevelToReact>
      <MaxSimsToProcessPerTick value="10">
        <!--The max number of sims that PulseSims will consider in one tick (the more we do, the less efficient (but more responsive) the reaction will be)-->
      </MaxSimsToProcessPerTick>
      <ReactorLineOfSight value="False">
        <!--Specifies whether or not the broadcaster only effects Sims with line-of-sight to the broadcasting object.-->
      </ReactorLineOfSight>
      <ReactOnRepeatedEntry value="True">
        <!--Whether or not the Sim will react anew to the broadcaster when exiting and re-entering the radius of the broadcaster. Do NOT tune to false if you have an ExitCallback or ExitInteraction.-->
      </ReactOnRepeatedEntry>
      <ReactToMultiplePulses value="True">
        <!--If true, your sim will be pulsed every time the broadcaster pulses.  Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </ReactToMultiplePulses>
      <SpeciesToEffect value="Human">
        <!--List of species flags that this reaction broadcaster should broadcast to.  Valid entries are Human, Horse, Cat, Dog, LittleDog or a comma separated list of several of these.-->
      </SpeciesToEffect>
      <ReactorCouldSeeCheck value="False">
        <!--Specifies whether or not the broadcaster only effects Sims which pass a "could-see" check to the broadcasting object (i.e., they are not in their frontal vision cone but there are no objects between the two actors so the reactor could hypothetically see if they turned around).-->
      </ReactorCouldSeeCheck>
      <MountedSimsDoNonMountedBehavior value="True">
        <!--If true, mounted sims will attempt to do the normal non-mounted behavior for this broadcaster while mounted. If true, this will cause the sim to ignore all other mounted reaction specific params. Note: This may or may not work! Test thoroughly when setting this to true.-->
      </MountedSimsDoNonMountedBehavior>
      <MountedReactToMultiplePulses value="False">
        <!--If true, your mounted sim will play the OnEnter MountedReactionType specified in MountedReactionTypes on every pulse. Set to false if you only want to be pulsed once per time entering the broadcaster.-->
      </MountedReactToMultiplePulses>
      <MountedReactionTypes value="None, None">
        <!--The MountedReactionType played by mounted horses and riders, instead of doing the normal behavior. If both enter and exit are set to none, mounted sims will not play a mounted reaction. What reaction to play when: [Entering the broadcaster (or initial pulse), exiting the broadcaster].-->
      </MountedReactionTypes>
    </kHeartBrokenParams>
    <kMournAutonomousTimeLimit value="72">
      <!--Once this many hours pass from the time of death, Sim's will no longer autonomously mourn the particular urnstone.-->
    </kMournAutonomousTimeLimit>
    <kGhostSpawnStartHour value="23">
      <!--The earliest hour of night that the ghost will try to spawn.  The minute is based from their time of death.-->
    </kGhostSpawnStartHour>
    <kGhostSpawnDuration value="5">
      <!--The number of hours the ghost will haunt before returning to their grave.-->
    </kGhostSpawnDuration>
    <kCameraZoomOnDeathLerp value="7">
      <!--Zoom when the camera lerps to the dead sim. Positive float. Initial GPE Default: 7f.-->
    </kCameraZoomOnDeathLerp>
    <kCameraPitchOnDeathLerp value="-35">
      <!--Pitch when the camera lerps to the dead sim. Positive float. Range: (-90, 90). Initial GPE Default: -30f.-->
    </kCameraPitchOnDeathLerp>
    <kMournMinDistance value="1">
      <!--The closest a Sim can route to the tombstone when mourning.-->
    </kMournMinDistance>
    <kMournMaxDistance value="8">
      <!--The farthest distance a Sim can be to the tombstone when mourning.-->
    </kMournMaxDistance>
    <kGhostBurialGroundDurationHours value="24">
      <!--The number of hours ghosts created for the burial ground scenario will hang around.-->
    </kGhostBurialGroundDurationHours>
    <kGhostMaxGhostsInWorld value="15">
      <!--The max number of ghosts allowed in the world at once.-->
    </kGhostMaxGhostsInWorld>
    <kPickUpMinLTR value="50">
      <!--The minimum LTR 'Liking' value to be allowed to pick up an urnstone if it isn't already player moveable.-->
    </kPickUpMinLTR>
    <kGhostSpawnHourVariant value="3">
      <!--The number of hours the ghost can spawn past the start hour.  This provides a little variance-->
    </kGhostSpawnHourVariant>
    <kMinLikingAddMourning value="101">
      <!--The liking threshold for mourning a friend's death (who isn't in your household)-->
    </kMinLikingAddMourning>
    <kIncreasedFullMoonGhostSpawnChance value="50">
      <!--Increased chanced a ghost will spawn at kGhostSpawnHour once its required idle time has passed. Added to kSpawnChance. Range (0 - 100)-->
    </kIncreasedFullMoonGhostSpawnChance>
    <kHologramYPosition value="0.4">
      <!--Y Position above ground that the holographic Sim will appear for future gravestones (float) - PAB-->
    </kHologramYPosition>
    <kHologramSpinFactor value="2">
      <!--Rotation speed: Degrees to add every tick (float)- PAB-->
    </kHologramSpinFactor>
    <kFutureDeathType value="Causality, FutureUrnstoneHologram, Jetpack">
      <!--Death Styles that will use the future urnstone.-->
    </kFutureDeathType>
  </Current_Tuning>
  <Deprecated_Tuning>
    <IsLifeThreatening value="False">
      <!--Whether the reaction is responding to a life-threatening event (e.g. responding to fire)-->
      <!--deprecated on: 3/13/2008 4:22:07 PM-->
    </IsLifeThreatening>
  </Deprecated_Tuning>
</base>